{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/CardColumns.js","webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./src/pages/games.js"],"names":["createWithBsPrefix","forwardRef","p","ref","createElement","className","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","prefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","query","GamesPage","data","Layout","theme","SEO","title","id","CardColumns","allGamesCsv","nodes","map","imageFile","name","slug","to","key","src","publicURL"],"mappings":"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","file":"component---src-pages-games-js-46efe6227f9afa85f6f2.js","sourcesContent":["import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-columns');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport { Card, CardColumns } from \"react-bootstrap\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport SEO from \"../components/SEO\";\r\n\r\nconst GamesPage = ({ data }) => (\r\n  <Layout theme=\"medals\" variant=\"light\">\r\n    <SEO title=\"Games\" />\r\n    <div id=\"subtitle\" className=\"d-flex justify-content-center text-nowrap\">\r\n      All Games\r\n    </div>\r\n    <CardColumns>\r\n      {data.allGamesCsv.nodes.map(({ imageFile, name, slug, theme }) => (\r\n        <Link to={`/${slug}`} className=\"d-block text-white\" key={slug}>\r\n          <Card text=\"white\" className={`themeable ${theme}-theme`}>\r\n            {imageFile && <Card.Img src={imageFile.publicURL} className=\"p-2\" />}\r\n            <Card.Title className=\"text-center mt-2\">{name}</Card.Title>\r\n          </Card>\r\n        </Link>\r\n      ))}\r\n    </CardColumns>\r\n  </Layout>\r\n);\r\n\r\nexport const query = graphql`\r\n  query WeeksQuery {\r\n    allGamesCsv {\r\n      nodes {\r\n        slug\r\n        name\r\n        theme\r\n        imageFile {\r\n          publicURL\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GamesPage;\r\n"],"sourceRoot":""}