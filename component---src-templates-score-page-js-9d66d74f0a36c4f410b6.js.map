{"version":3,"sources":["webpack:///./src/context/SpoilerContext.js","webpack:///./src/components/SpoilerButton.js","webpack:///./src/components/YoutubeLink.js","webpack:///./src/components/Score.js","webpack:///./src/components/ViewsyncLink.js","webpack:///./src/components/ScoreTable.js","webpack:///./src/components/ScoreFootnotes.js","webpack:///./src/components/ResultsRow.js","webpack:///./src/components/ResultsTable.js","webpack:///./src/components/ImageHeader.js","webpack:///./src/templates/ScorePage.js"],"names":["defaultState","showSpoilers","toggleSpoilers","SpolierContext","createContext","SpoilerProvider","children","useState","setShowSpoilers","useEffect","JSON","parse","localStorage","getItem","Provider","value","show","setItem","stringify","SpoilerButton","useContext","SpoilerContext","Button","variant","onClick","YoutubeLink","videoId","href","Score","day","allNotes","place","score","youtube","notes","noteIndex","findIndex","n","className","repeat","ViewsyncLink","data","youtubeLinks","map","node","days","filter","Boolean","names","name","length","link","join","ScoreTable","rows","maxDays","reduce","max","contestant","Math","push","key","scope","row","id","Table","responsive","channel","getFootnoteContent","footnotes","extension","childMarkdownRemark","html","internal","content","ScoreFootnotes","footnote_html","dangerouslySetInnerHTML","__html","note","index","RESULTS_LABELS","first","second","third","ResultsRow","ResultsTable","winner","icon","ImageHeader","alt","publicURL","childImageSharp","fluid","src","defaultProps","ScorePage","pageContext","scores","theme","imageFile","Layout","currentGame","navButtons","SEO","title","query"],"mappings":"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","file":"component---src-templates-score-page-js-9d66d74f0a36c4f410b6.js","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\"\r\n\r\nconst LOCAL_STORAGE_KEY = \"showSpoilers\"\r\n\r\nconst defaultState = {\r\n  showSpoilers: false,\r\n  toggleSpoilers: () => {},\r\n}\r\n\r\nconst SpolierContext = createContext(defaultState)\r\n\r\nexport const SpoilerProvider = ({ children }) => {\r\n  const [showSpoilers, setShowSpoilers] = useState(false)\r\n  useEffect(() => {\r\n    setShowSpoilers(\r\n      JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) ?? false\r\n    )\r\n  }, [])\r\n\r\n  const toggleSpoilers = () =>\r\n    setShowSpoilers(show => {\r\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(!show))\r\n      return !show\r\n    })\r\n\r\n  return (\r\n    <SpolierContext.Provider value={{ showSpoilers, toggleSpoilers }}>\r\n      {children}\r\n    </SpolierContext.Provider>\r\n  )\r\n}\r\n\r\nexport default SpolierContext\r\n","import React, { useContext } from \"react\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport SpoilerContext from \"../context/SpoilerContext\"\r\n\r\nconst SpoilerButton = () => {\r\n  const { showSpoilers, toggleSpoilers } = useContext(SpoilerContext)\r\n  return (\r\n    <Button variant=\"warning\" onClick={toggleSpoilers}>\r\n      {showSpoilers ? \"Hide\" : \"Show\"} Spoilers\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default SpoilerButton\r\n","import React from \"react\"\r\n\r\nconst YoutubeLink = ({ children, videoId }) => {\r\n  return videoId ? (\r\n    <a href={`https://www.youtube.com/watch?v=${videoId}`}>{children}</a>\r\n  ) : (\r\n    children\r\n  )\r\n}\r\n\r\nexport default YoutubeLink\r\n","import React, { useContext } from \"react\"\r\nimport SpoilerContext from \"../context/SpoilerContext\"\r\nimport YoutubeLink from \"./YoutubeLink\"\r\n\r\nconst Score = ({ day, allNotes }) => {\r\n  const { showSpoilers } = useContext(SpoilerContext)\r\n  const { place, score, youtube, notes } = day\r\n  const noteIndex = allNotes.findIndex(n => n === notes)\r\n\r\n  return (\r\n    <td>\r\n      <YoutubeLink videoId={youtube}>\r\n        {showSpoilers ? (\r\n          <span className={`comment ${place}`}>\r\n            {score || \"TBD\"}\r\n            {notes ? \" \" + \"*\".repeat(noteIndex + 1) : \"\"}\r\n          </span>\r\n        ) : (\r\n          <span>{youtube ? \"Watch\" : score ? \"Spoilers\" : \"TBD\"}</span>\r\n        )}\r\n      </YoutubeLink>\r\n    </td>\r\n  )\r\n}\r\n\r\nexport default Score\r\n","import React from \"react\"\r\n\r\nconst ViewsyncLink = ({ data, day }) => {\r\n  const youtubeLinks = data.map(node => node.days[day].youtube).filter(Boolean)\r\n  const names = data.map(node => node.days[day].name)\r\n  if (youtubeLinks.length > 1) {\r\n    return (\r\n      <a\r\n        href={`https://viewsync.net/watch?${youtubeLinks\r\n          .map(link => `v=${link}`)\r\n          .join(\"&\")}`}\r\n      >\r\n        {day + 1 + \" \" + names[0]}\r\n      </a>\r\n    )\r\n  } else {\r\n    return day + 1 + \" \" + names[0]\r\n\r\n  }\r\n}\r\n\r\nexport default ViewsyncLink\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nimport Score from \"./Score\";\r\nimport ViewsyncLink from \"./ViewsyncLink\";\r\n\r\nconst ScoreTable = ({ data, notes }) => {\r\n  let rows = [];\r\n  const maxDays = data.reduce(\r\n    (max, contestant) =>\r\n      Math.max(contestant.days.filter((day) => day.score).length, max),\r\n    0\r\n  );\r\n  for (let day = 0; day < maxDays; day++) {\r\n    rows.push(\r\n      <tr key={day}>\r\n        <th scope=\"row\">\r\n          <ViewsyncLink data={data} day={day} />\r\n        </th>\r\n        {data.map((row) => (\r\n          <Score key={row.id} day={row.days[day]} allNotes={notes} />\r\n        ))}\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Table responsive variant=\"dark\" className=\"results table-center\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Viewsync</th>\r\n          {data.map(({ id, name, youtube }) => (\r\n            <th scope=\"col\" key={id}>\r\n              {youtube ? (\r\n                <a href={`https://www.youtube.com/user/${youtube.channel}`}>\r\n                  {name}\r\n                </a>\r\n              ) : (\r\n                name\r\n              )}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>{rows}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ScoreTable;\r\n","import React from \"react\";\r\n\r\nconst ScoreFootnotes = ({ footnotes, notes }) => {\r\n  let footnote_html = getFootnoteContent(footnotes);\r\n\r\n  return (\r\n    <div id=\"footnote\">\r\n      {footnote_html && (\r\n        <div\r\n          className=\"mb-3 footnote-content\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: footnote_html,\r\n          }}\r\n        ></div>\r\n      )}\r\n      {notes.map((note, index) => (\r\n        <div className=\"mb-3\" key={index}>\r\n          {\"*\".repeat(index + 1)} {note}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getFootnoteContent = (footnotes) => {\r\n  switch (footnotes?.extension) {\r\n    case \"md\":\r\n      return footnotes.childMarkdownRemark.html;\r\n    case \"html\":\r\n      return footnotes.internal.content;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default ScoreFootnotes;\r\n","import React, { useContext } from \"react\"\r\nimport SpoilerContext from \"../context/SpoilerContext\"\r\n\r\nconst RESULTS_LABELS = {\r\n  first: \"1st Finishes\",\r\n  second: \"2nd Finishes\",\r\n  third: \"3rd Finishes\",\r\n}\r\n\r\nconst ResultsRow = ({ data, place }) => {\r\n  const { showSpoilers } = useContext(SpoilerContext)\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{RESULTS_LABELS[place]}</th>\r\n      {data.map(score => (\r\n        <td key={score.id} className={place}>\r\n          {showSpoilers\r\n            ? score.days.filter(day => day.place === place).length\r\n            : \"Spoilers\"}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default ResultsRow\r\n","import React, { useContext } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport ResultsRow from \"./ResultsRow\";\r\nimport SpoilerContext from \"../context/SpoilerContext\";\r\n\r\nconst ResultsTable = ({ data, winner }) => {\r\n  const { showSpoilers } = useContext(SpoilerContext);\r\n\r\n  return (\r\n    <Table variant=\"dark\" className=\"table-center\" responsive>\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Totals</th>\r\n          {data.map((score) => (\r\n            <th scope=\"col\" key={score.id}>\r\n              {score.name}\r\n              {showSpoilers && score.name === winner && (\r\n                <FontAwesomeIcon icon=\"trophy\" className=\"results-winner\" />\r\n              )}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <ResultsRow data={data} place=\"third\" />\r\n        <ResultsRow data={data} place=\"second\" />\r\n        <ResultsRow data={data} place=\"first\" />\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ResultsTable;\r\n","import React from \"react\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst ImageHeader = ({ data, alt }) => {\r\n  const { publicURL, childImageSharp } = data\r\n\r\n  return (\r\n    <div className=\"text-center\" id=\"image-header\">\r\n      {childImageSharp ? (\r\n        <Img fluid={childImageSharp.fluid} alt={alt} />\r\n      ) : (\r\n        <img src={publicURL} className=\"img-fluid\" alt={alt} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nImageHeader.defaultProps = {\r\n  alt: \"Game Logo\",\r\n}\r\n\r\nexport default ImageHeader\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport { SpoilerProvider } from \"../context/SpoilerContext\";\r\nimport Layout from \"../components/Layout\";\r\nimport SEO from \"../components/SEO\";\r\nimport SpoilerButton from \"../components/SpoilerButton\";\r\nimport ScoreTable from \"../components/ScoreTable\";\r\nimport ScoreFootnotes from \"../components/ScoreFootnotes\";\r\nimport ResultsTable from \"../components/ResultsTable\";\r\nimport ImageHeader from \"../components/ImageHeader\";\r\n\r\nexport default function ScorePage({ data, pageContext }) {\r\n  const { name, notes, scores, winner, theme, imageFile } = pageContext;\r\n\r\n  return (\r\n    <SpoilerProvider>\r\n      <Layout currentGame={name} theme={theme} navButtons={<SpoilerButton />}>\r\n        <SEO title={name} />\r\n        <ImageHeader data={imageFile} alt={`${name} Logo`} />\r\n        {scores ? (\r\n          <>\r\n            <h2 id=\"subtitle\" className=\"text-center text-nowrap my-2\">\r\n              Golden Goblet\r\n            </h2>\r\n            <ScoreTable data={scores} notes={notes} />\r\n            <ResultsTable data={scores} winner={winner} />\r\n            <ScoreFootnotes notes={notes} footnotes={data.footnotes} />\r\n          </>\r\n        ) : (\r\n          <h2 id=\"subtitle\" className=\"text-center mt-5\">\r\n            Coming Soon\r\n          </h2>\r\n        )}\r\n        <p></p>\r\n      </Layout>\r\n    </SpoilerProvider>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    footnotes: file(\r\n      name: { glob: $slug }\r\n      relativePath: { regex: \"/footnotes/.+/\" }\r\n      extension: { in: [\"html\", \"md\"] }\r\n    ) {\r\n      extension\r\n      internal {\r\n        content\r\n      }\r\n      childMarkdownRemark {\r\n        html\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}